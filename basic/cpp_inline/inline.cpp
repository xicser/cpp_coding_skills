/*

当函数内部较短, 相比于执行函数内部代码的时间开销,
函数调用开销已经不能忽略, 这时候使用内联函数,
编译器会直接将内联函数在调用处展开, 从而减少函数调用开销

一般将inline函数定义在头文件里面, 就像宏定义一样,
这样使用该内联函数的源文件只需要包含该头文件即可


如果在不同文件里都实现一次该内联函数的话，那么，最好保证每个定义都是一样的，否则，将会引起未定义的行为。
如果不是每个文件里的定义都一样，那么，编译器展开的是哪一个，那要看具体的编译器而定。
所以，最好将内联函数定义放在头文件中

*/

#include <iostream>
#include "inline.h"


using namespace std;

void inlineTest(void)
{
    add(1, 5);
    add(1, 5);
    add(1, 5);
    add(1, 5);
    add(1, 5);
    add(1, 5);
}
